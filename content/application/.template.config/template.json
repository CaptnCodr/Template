{
  "author": "IntelliFactory",
  "classifications": [ "Web", "Blazor", "Bolero" ],
  "name": "Bolero Hosted Application",
  "tags": {
    "language": "F#",
    "type": "project"
  },
  "identity": "Bolero.Application.Template",
  "groupIdentity": "Bolero.Application",
  "shortName": "bolero-app",
  "sourceName": "Bolero.Template",
  "preferNameDirectory": true,
  "symbols": {
    "minimal": {
      "type": "parameter",
      "isRequired": false,
      "description": "Create a minimal application",
      "dataType": "bool",
      "defaultValue": "false"
    },
    "server": {
      "type": "parameter",
      "isRequired": false,
      "description": "Include an ASP.NET Core server-side host",
      "dataType": "bool",
      "defaultValue": "true"
    },
    "html": {
      "type": "parameter",
      "isRequired": false,
      "description": "Use HTML templates (ignored if minimal=true)",
      "dataType": "bool",
      "defaultValue": "true"
    },
    "hotreload": {
      "type": "parameter",
      "isRequired": false,
      "description": "Include hot reload for HTML templates (ignored if html=false or server=false)",
      "dataType": "bool",
      "defaultValue": "true"
    },
    "hostpage": {
      "type": "parameter",
      "isRequired": false,
      "description": "How the static HTML content is generated (ignored if server=false)",
      "dataType": "choice",
      "choices": [
        {"choice":"bolero","description":"A page defined with Bolero's html functions"},
        {"choice":"html","description":"A plain index.html file"},
        {"choice":"razor","description":"A dynamically compiled Razor page"}
      ],
      "defaultValue":"bolero"
    },
    "pwa": {
      "type": "parameter",
      "isRequired": false,
      "description": "Create the client side as a progressive web app",
      "dataType": "bool",
      "defaultValue": "false"
    },
    "nightly": {
      "type": "parameter",
      "isRequired": false,
      "description": "Reference the nightly release of Bolero",
      "dataType": "bool",
      "defaultValue": "false"
    },
    "paket": {
      "type": "parameter",
      "isRequired": false,
      "description": "Use Paket for NuGet package management",
      "dataType": "bool",
      "defaultValue": "false"
    },
    "server_actual": {
      "type": "computed",
      "dataType": "bool",
      "value": "(server)"
    },
    "hotreload_actual": {
      "type": "computed",
      "dataType": "bool",
      "value": "(hotreload && html && server_actual)"
    },
    "bolero_version": {
      "type": "generated",
      "generator": "switch",
      "replaces": "BOLERO_VERSION",
      "parameters": {
        "evaluator": "C++",
        "datatype": "string",
        "cases": [
          {"condition": "(nightly)", "value": "0.*-*"},
          {"condition": "(!nightly)", "value": "0.*"}
        ]
      }
    }
  },
  "sources": [
    {
      "exclude": [
        "src/Bolero.Template.Client/Main.minimal.fs",
        "**/.template.config/**/*",
        ".paket/*",
        "nuget.config"
      ],
      "modifiers": [
        {
          "condition": "(server_actual)",
          "rename": {
            "src/Bolero.Template.Client/wwwroot/books.json": "src/Bolero.Template.Server/data/books.json"
          }
        },
        {
          "condition": "(!server_actual)",
          "exclude": [
            "src/Bolero.Template.Server/**/*"
          ]
        },
        {
          "condition": "(minimal)",
          "exclude": [
            "src/Bolero.Template.Server/data/books.json",
            "src/Bolero.Template.Server/BookService.fs",
            "src/Bolero.Template.Client/wwwroot/main.html",
            "src/Bolero.Template.Client/Main.fs"
          ],
          "include": [
            "src/Bolero.Template.Client/Main.minimal.fs"
          ],
          "rename": {
            "src/Bolero.Template.Client/Main.minimal.fs": "src/Bolero.Template.Client/Main.fs"
          }
        },
        {
          "condition": "(!html)",
          "exclude": [
            "src/Bolero.Template.Client/wwwroot/main.html"
          ]
        },
        {
          "condition": "(hostpage != \"bolero\")",
          "exclude": [
            "src/Bolero.Template.Server/Index.fs"
          ]
        },
        {
          "condition": "(hostpage != \"razor\")",
          "exclude": [
            "src/Bolero.Template.Server/Pages/_Host.cshtml",
            "src/Bolero.Template.Server/HostModel.fs"
          ]
        },
        {
          "condition": "(server_actual && hostpage != \"html\")",
          "exclude": [
            "src/Bolero.Template.Client/wwwroot/index.html"
          ]
        },
        {
          "condition": "(nightly && !paket)",
          "include": ["nuget.config"]
        },
        {
          "condition": "(!paket)",
          "exclude": [
            ".config/dotnet-tools.json",
            "paket.dependencies"
          ]
        },
        {
          "condition": "(!pwa)",
          "exclude": [
            "src/Bolero.Template.Client/wwwroot/icon-512.png",
            "src/Bolero.Template.Client/wwwroot/manifest.json",
            "src/Bolero.Template.Client/wwwroot/service-worker.js",
            "src/Bolero.Template.Client/wwwroot/service-worker.published.js"
          ]
        }
      ]
    }
  ],
  "SpecialCustomOperations": {
    "*": {
      "flagPrefix": "//#",
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "if": [ "//#if" ],
            "else": [ "//#else" ],
            "elseif": [ "//#elseif" ],
            "endif": [ "//#endif" ],
            "true": true,
            "wholeLine": true,
            "evaluator": "C++"
          }
        }
      ]
    }
  },
  "postActions": [
    {
      "condition": "(paket && OS == \"Windows_NT\")",
      "description": "Convert project to Paket",
      "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
      "args": {
        "redirectStandardOutput": "false",
        "executable": "dotnet",
        "args": "paket convert-from-nuget --force"
      },
      "continueOnError": false
    }
  ]
}
